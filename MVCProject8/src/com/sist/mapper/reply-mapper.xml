<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.mapper.reply-mapper">
	<!-- 
		parameterType="java.lang.String" =>String
		parameterType="java.lang.Integer" =>int
		parameterType="java.lang.Map" =>hashmap 으로 버전이 업그레이드됨!
		
	
	 -->
	<select id="replyListData" resultType="BoardVO" parameterType="hashmap"><!-- hashmap은 java.util.map에 등록되어있음 -->
		SELECT no, subject, name, regdate, hit, group_tab, num
		FROM (SELECT no, subject, name, regdate, hit, group_tab, rownum as num
		FROM (SELECT no, subject, name, regdate, hit, group_tab
		FROM replyBoard ORDER BY group_id DESC, group_step ASC))
		WHERE num BETWEEN #{start} AND #{end}
	</select>
	<!-- 최신부터 가져오는데 답변 순서대로 가져와라 그룹이 새글 올릴때마다 ID가 증가됨! -->
	<!-- 찾기 이름, 제목, 내용으로 찾기 게시판에서..
	     3개 주제중 한개 선택후 검색할 내용 입력
	     	fs => 컬럼명주어 name like(subject like, content like) fs, ss => 실제 데이터
	     	fs를 map에 실어서 가져올예정
	     	컬럼명,테이블명, 뷰명 은 반드시 $을 주어야한다. 
	     	일반데이터 를 줄때는  #을 주어야한다.
	 -->
	<select id="replyFindData" resultType="BoardVO" parameterType="hashmap">
		SELECT no, subject, name, regdate, hit
		FROM replyBoard
		WHERE ${fs} LIKE '%'||#{ss}||'%'
	</select>
	
	<!--한페이지에 15개씩 리스트 출력할 얘 -->
	<select id="replyTotalPage" resultType="int">
		SELECT CEIL(COUNT(*)/15.0) 
		FROM replyBoard
	</select>
	<!-- private int no;
	private String name;
	private String subject;
	private String content;
	private String pwd;
	private Date regdate;
	private int hit;
	//////아래 묻고답하기!
	private int group_id;
	private int group_step;
	private int group_tab;
	private int root;
	private int depth;
	private String filename;
	private String filesize;
	private int type; -->
	<select id="replyDetailData" resultType="BoardVO" parameterType="int">
		SELECT no, name, subject, content, regdate, hit, pwd
		FROM replyBoard
		WHERE no=#{no}
	</select>
	
	<update id="hitIncrement" parameterType="int"><!-- 한 태그당 한개의 sql 문장만 수행! 각 태그에 sql문장 기입하기! -->
		UPDATE replyBoard SET
		hit=hit+1
		WHERE no=#{no}
	</update>
	<insert id="replyBoardInsert" parameterType="BoardVO">
		<selectKey keyProperty="no" resultType="int" order="BEFORE"> <!--   selectkey no처리먼저 아래처럼 nvl처리 해주고 insert처리해라!!  before준 이유는 selectkey를 실행하고 insert를 수행하라는 의미"order" -->
		SELECT NVL(MAX(no)+1,1) as no FROM replyBoard 
		</selectKey>
		INSERT INTO replyBoard(no,name,subject, content, pwd, group_id) 
		VALUES(#{no},#{name},#{subject},#{content},#{pwd},
		(SELECT NVL(MAX(group_id)+1,1) FROM replyBoard)
		)
	</insert>
	<!-- #{} 사용자로부터 받은 값!! -->
	<update id="replyBoardUpdate" parameterType="BoardVO">
		UPDATE replyBoard SET
		name=#{name}, subject=#{subject}, content=#{content}
		WHERE no=#{no}
	</update>
	
	<select id="replyGetPassword" resultType="String" parameterType="int">
		SELECT pwd FROM replyBoard
		WHERE no=#{no}
	</select>
	
</mapper>